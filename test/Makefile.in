## Variables set by configure 
OPENCV_DIRECTORY  = @OPENCVDIR@
XGBOOST_DIRECTORY = @XGBOOSTDIR@
TENSORFLOW_DIR    = @TENSORFLOWDIR@
TENSORFLOWLIBS    = @TENSORFLOWLIBS@
TAGGERDIR         = @TAGGERDIR@

CXX           = @CXX@
LD            = @CXX@
CXXFLAGS      = @CXXFLAGS@
LDFLAGS       = @LDFLAGS@
PREFIX        = @prefix@
LDCONFIG      = @LDCONFIG@
LIBSUFFIX     = @LIBSUFFIX@
PYTHONCFG     = @PYTHONCFG@
SCRAMNUMPYCFG = @SCRAMNUMPYCFG@
TMVALIB       = @TMVALIB@
##End variables set by configure

# directory to put intermediate files 
ODIR       = obj

# Top tagger source diretoriess
TTSDIR     = $(TAGGERDIR)/TopTagger/src
TTTDIR     = $(TAGGERDIR)/TopTagger/test
TPSDIR     = $(TAGGERDIR)/CfgParser/src

## Enable for maximum warning
CXXFLAGS += -Wall -Wextra -Wpedantic

# Flags for generating auto dependancies 
CXXDEPFLAGS = -MMD -MP

#Necessary includes and libraries, the order matters here!

# top tagger includes
INCLUDESDIRS  += -I. -I$(TAGGERDIR)/..
# top tagger libraries
LIBSTOPTAGGER += -L$(TTTDIR) -lTopTagger

## Include ROOT
INCLUDESDIRS += $(shell root-config --cflags)
# ROOT libraries
LIBS         += $(shell root-config --libs)
PYROOTLIBS = 

# TMVA library
ifdef TMVALIB
	CXXFLAGS += -DSHOTTOPTAGGER_DO_TMVA
	LIBS     += $(TMVALIB)
endif

#python includes and libraries
ifdef PYTHONCFG
	INCLUDESDIRS  += $(shell $(PYTHONCFG) --includes)

	CXXFLAGS += -DDOPYCAPIBIND
	LIBS     += -L$(shell $(PYTHONCFG) --prefix)/lib $(shell $(PYTHONCFG) --libs)
	PYROOTLIBS += -lPyROOT
endif

#scram specific numpy c-api
ifdef SCRAMNUMPYCFG
	INCLUDESDIRS += -I$(SCRAMNUMPYCFG)/c-api/core/include
endif

# openCV includes and libraries
ifdef OPENCV_DIRECTORY
	INCLUDESDIRS  += -I$(OPENCV_DIRECTORY)/include/ -I$(OPENCV_DIRECTORY)/modules/core/include 
	INCLUDESDIRS  += -I$(OPENCV_DIRECTORY)/modules/video/include -I$(OPENCV_DIRECTORY)/modules/objdetect/include 
	INCLUDESDIRS  += -I$(OPENCV_DIRECTORY)/modules/ml/include/ -I$(OPENCV_DIRECTORY)/modules/photo/include/ 
	INCLUDESDIRS  += -I$(OPENCV_DIRECTORY)/modules/imgproc/include/
	INCLUDESDIRS  += -I$(OPENCV_DIRECTORY)

	CXXFLAGS += -DSHOTTOPTAGGER_DO_OPENCV
	LIBS     += -L$(OPENCV_DIRECTORY)/lib -lopencv_ml -lopencv_core
endif

# xgboost includes and libraries
ifdef XGBOOST_DIRECTORY
	INCLUDESDIRS  += -I$(XGBOOST_DIRECTORY) -I$(XGBOOST_DIRECTORY)/rabit/include

	CXXFLAGS += -DDOXGBOOST
	LIBS     += -L$(XGBOOST_DIRECTORY)/lib -lxgboost
endif

# tensorflow includes and libraries
ifdef TENSORFLOW_DIR
	INCLUDESDIRS  += -I$(TENSORFLOW_DIR)/include

	CXXFLAGS += -DDOTENSORFLOW
	LIBS     += -L$(TENSORFLOW_DIR)/lib $(TENSORFLOWLIBS)
endif

PROGRAMS = topTaggerTest

LIBRARIES = TopTagger TopTaggerInterface

all: mkobj $(LIBRARIES) $(PROGRAMS)


mkobj:
	@mkdir -p $(ODIR)

#special rule to make root reflex dictionary
$(ODIR)/rootdict.cc : $(TTTDIR)/rootdict.h
	rootcling -f $@ $^
	mv $(ODIR)/rootdict_rdict.pcm $(TTTDIR)

$(ODIR)/%.o : $(TTSDIR)/%.cc
	$(CXX) $(CXXFLAGS) $(CXXDEPFLAGS) $(INCLUDESDIRS) -fPIC -o $@ -c $<

$(ODIR)/%.o : $(TTSDIR)/%.cpp
	$(CXX) $(CXXFLAGS) $(CXXDEPFLAGS) $(INCLUDESDIRS) -fPIC -o $@ -c $<

$(ODIR)/%.o : $(TTTDIR)/%.cc
	$(CXX) $(CXXFLAGS) $(CXXDEPFLAGS) $(INCLUDESDIRS) -fPIC -o $@ -c $<

$(ODIR)/%.o : $(TTTDIR)/%.cpp
	$(CXX) $(CXXFLAGS) $(CXXDEPFLAGS) $(INCLUDESDIRS) -fPIC -o $@ -c $<

$(ODIR)/%.o : $(TPSDIR)/%.cc
	$(CXX) $(CXXFLAGS) $(CXXDEPFLAGS) $(INCLUDESDIRS) -fPIC -o $@ -c $<

$(ODIR)/%.o : $(TPSDIR)/%.cpp
	$(CXX) $(CXXFLAGS) $(CXXDEPFLAGS) $(INCLUDESDIRS) -fPIC -o $@ -c $<

$(ODIR)/%.o : $(ODIR)/%.cc
	$(CXX) $(CXXFLAGS) $(CXXDEPFLAGS) $(INCLUDESDIRS) -fPIC -o $@ -c $<

#compile python module 
$(ODIR)/TopTaggerInterface.o: $(TTSDIR)/TopTaggerInterface.c
	$(CXX) $(CXXFLAGS) $(CXXDEPFLAGS) $(INCLUDESDIRS) -fPIC -o $@ -c $<

#Compile top tagger library
TopTagger : libTopTagger.$(LIBSUFFIX)

#Compile top tagger python library
TopTaggerInterface: libTopTaggerInterface.$(LIBSUFFIX) installPython

LIBRARY_OBJECT_FILES=$(addprefix $(ODIR)/, $(notdir $(patsubst %.cc, %.o, $(patsubst %.cpp, %.o, $(wildcard $(TTSDIR)/*.cc $(TTSDIR)/*.cpp $(TPSDIR)/*.cc $(TPSDIR)/*.cpp)))))

#link shared library
libTopTagger.$(LIBSUFFIX): $(LIBRARY_OBJECT_FILES)
	${LD} -shared -o $@ $^ $(LIBS)

#link python module (link as standalone module)
libTopTaggerInterface.$(LIBSUFFIX): $(ODIR)/TopTaggerInterface.o $(LIBRARY_OBJECT_FILES)
	$(LD) -shared $^ $(LIBS) $(PYROOTLIBS) -o $@

#compile topTaggerTest code
topTaggerTest : libTopTagger.$(LIBSUFFIX) $(ODIR)/topTaggerTest.o $(ODIR)/rootdict.o
	${LD} $(ODIR)/topTaggerTest.o $(ODIR)/rootdict.o $(LIBSTOPTAGGER) $(LIBS) -o $@

clean:
	rm -f $(ODIR)/rootdict.cc rootdict_rdict.pcm $(ODIR)/*.o $(addprefix lib, $(addsuffix .$(LIBSUFFIX), $(LIBRARIES))) $(TAGGERDIR)/TopTagger/python/TopTaggerInterface.$(LIBSUFFIX) $(ODIR)/*.d $(PROGRAMS) core 

installPython: ../python/TopTaggerInterface.$(LIBSUFFIX)

../python/TopTaggerInterface.$(LIBSUFFIX):
	cd ../python/;	ln -s ../test/libTopTaggerInterface.$(LIBSUFFIX) $(notdir $(@))

install: libTopTagger.$(LIBSUFFIX)
	cp libTopTagger.$(LIBSUFFIX) $(PREFIX)/lib/
	chmod 644 $(PREFIX)/lib/libTopTagger.$(LIBSUFFIX)
	cd $(PREFIX)/lib/
	$(LDCONFIG)
	mkdir -p $(PREFIX)/include/TopTagger/TopTagger/
	cp -r $(TAGGERDIR)/../TopTagger/TopTagger/include $(PREFIX)/include/TopTagger/TopTagger/
	chmod 644 $(PREFIX)/include/TopTagger/TopTagger/interface/*.h
	mkdir -p $(PREFIX)/include/TopTagger/CfgParser/
	cp -r $(TAGGERDIR)/../TopTagger/CfgParser/include $(PREFIX)/include/TopTagger/CfgParser/
	chmod 644 $(PREFIX)/include/TopTagger/CfgParser/include/*.h

uninstall:
	rm $(PREFIX)/lib/libTopTagger.$(LIBSUFFIX)
	cd $(PREFIX)/lib/
	$(LDCONFIG)
	rm -r $(PREFIX)/include/TopTagger

-include $(ODIR)/*.d
